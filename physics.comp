#version 430

layout (local_size_x = 32) in;

struct Particle
{
    vec3 position;
    vec3 velocity;
    vec3 acceleration;
    vec3 normal;
    vec3 tangent;
    vec2 texture;
};

layout(binding = 1) buffer particlesBlock
{
    Particle particles[];
};

//For GLSL debugging
//http://shdr.bkcore.com
void main()
{
    uint index = gl_GlobalInvocationID.x;
    particles[index].acceleration = vec3(0, 0, -0.1);

    vec3 center = vec3(0.0, 0.0, 0.0);
    float radius = 1.0;

    float dist = distance(particles[index].position, center);
    if (radius > dist)
    {
        vec3 unitvec = normalize(particles[index].position - center);
        vec3 outofbounds = (dist - radius + 0.01) * unitvec;
        particles[index].velocity = vec3(0, 0, 0.01);
        particles[index].position = particles[index].position + outofbounds;
    };
}